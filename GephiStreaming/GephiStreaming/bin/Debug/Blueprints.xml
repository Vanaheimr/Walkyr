<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blueprints</name>
    </assembly>
    <members>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.CheckEdgeExistance`20">
            <summary>
            A delegate to check the existance of an edge within the given graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="Edge">A generic property edge.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IEdgeMethods`20">
            <summary>
            The interface for common edge methods.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyEdgeMethods`20">
            <summary>
            The interface for common read-only edge methods.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyEdgeMethods`20.EdgeById(`5)">
            <summary>
            Return the edge referenced by the given edge identifier.
            If no edge is referenced by a given identifier return null.
            </summary>
            <param name="EdgeId">An edge identifier.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyEdgeMethods`20.TryGetEdgeById(`5,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}@)">
            <summary>
            Try to return the edge referenced by the given edge identifier.
            </summary>
            <param name="EdgeId">An edge identifier.</param>
            <param name="Edge">An edge.</param>
            <returns>True when success; false otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyEdgeMethods`20.HasEdgeId(`5)">
            <summary>
            Check if the given edge identifier already exists within the graph.
            </summary>
            <param name="EdgeId">An edge identifier.</param>
            <returns>True when yes; false otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyEdgeMethods`20.EdgesById(`5[])">
            <summary>
            Return the edges referenced by the given array of edge identifiers.
            If no edge is referenced by a given identifier this value will be
            skipped.
            </summary>
            <param name="EdgeIds">An array of edge identifiers.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyEdgeMethods`20.EdgesByLabel(`7[])">
            <summary>
            Return an enumeration of all edges having one of the
            given edge labels.
            </summary>
            <param name="EdgeLabels">An array of edge labels.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyEdgeMethods`20.Edges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Get an enumeration of all edges in the graph.
            An optional edge filter may be applied for filtering.
            </summary>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyEdgeMethods`20.NumberOfEdges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Return the current number of edges matching the given optional edge filter.
            When the filter is null, this method should implement an optimized
            way to get the currenty number of edges.
            </summary>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IEdgeMethods`20.AddEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add the given edge to the graph, and returns it again.
            An exception will be thrown if the edge identifier is already being
            used by the graph to reference another edge.
            </summary>
            <param name="Edge">An edge.</param>
            <returns>The given edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IEdgeMethods`20.AddEdgeIfNotExists(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.CheckEdgeExistance{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add the given edge to the graph, and returns it again.
            An exception will be thrown if the edge identifier is already being
            used by the graph to reference another edge.
            </summary>
            <param name="Edge">An edge.</param>
            <param name="CheckExistanceDelegate">A delegate the check the existance of the given edge within the given graph.</param>
            <returns>The given edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IEdgeMethods`20.RemoveEdgesById(`5[])">
            <summary>
            Remove the given array of edges identified by their EdgeIds.
            </summary>
            <param name="EdgeIds">An array of EdgeIds of the edges to remove.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IEdgeMethods`20.RemoveEdges(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Remove the given array of edges from the graph.
            </summary>
            <param name="Edges">An array of edges to be removed from the graph.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IEdgeMethods`20.RemoveEdges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Remove any edge matching the given edge filter.
            </summary>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdgeExtensions">
            <summary>
            Extensions to the IGenericPropertyHyperEdge interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdgeExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given hyperedge into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="HyperEdge">A generic property hyperedge.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdgeExtensions.AsMutable``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given read only generic property hyperedge into a mutable hyperedge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="HyperEdge">A read only generic property hyperedge.</param>
            <returns>A mutable hyperedge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdgeExtensions.UseProperty``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``18,System.Action{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``18,``19},System.Action{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``18})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="IGenericPropertyHyperEdge">An object implementing IGenericPropertyHyperEdge.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccess">A delegate to call for the associated value of the given property key and its value.</param>
            <param name="OnError">A delegate to call for the associated value of the given property key when an error occurs.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdgeExtensions.PropertyFunc``21(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``18,System.Func{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``18,``19,``20},System.Func{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``18,``20})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <typeparam name="TResult">The type of the return value.</typeparam>
            <param name="IGenericPropertyHyperEdge">An object implementing IGenericPropertyHyperEdge.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccessFunc">A delegate to call for the key and associated value of the given property key.</param>
            <param name="OnErrorFunc">A delegate to call for the key and associated value of the given property key.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VerticesException">
            <summary>
            An exception during vertex processing occurred!
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.PropertyGraphException">
            <summary>
            The base class for all PropertyGraphExceptions.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.PropertyGraphException.#ctor(System.String,System.Exception)">
            <summary>
            A general PropertyGraph exception occurred!
            </summary>
            <param name="Message">The message that describes the error.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VerticesException.#ctor(System.String,System.Exception)">
            <summary>
            An exception during vertex processing occurred!
            </summary>
            <param name="Message">The message that describes the error.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.DuplicateVertexIdException`1">
            <summary>
            A duplicate VertexId was detected.
            </summary>
            <typeparam name="TId">The type of the vertex ids.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DuplicateVertexIdException`1.#ctor(`0,System.Exception)">
            <summary>
            A duplicate vertex identification was detected.
            </summary>
            <param name="VertexId">The unique id of the vertex.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexAddingEventHandler`20">
            <summary>
            An event handler called whenever a vertex will be added to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The vertex to be added to the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the vertex should be added or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexAddedEventHandler`20">
            <summary>
            An event handler called whenever a vertex was added to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The vertex added to the graph.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexPropertyAddingEventHandler`20">
            <summary>
            An event handler called whenever a vertex property will be added.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The property vertex sending this event.</param>
            <param name="Key">The key of the property to be added.</param>
            <param name="Value">The value of the property to be added.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be added or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexPropertyAddedEventHandler`20">
            <summary>
            An event handler called whenever a vertex property was added.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The property vertex sending this event.</param>
            <param name="Key">The key of the added property.</param>
            <param name="Value">The value of the added property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexPropertyChangingEventHandler`20">
            <summary>
            An event handler called whenever a vertex property will be changed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The property vertex sending this event.</param>
            <param name="Key">The key of the changing property.</param>
            <param name="OldValue">The old value of the changing property.</param>
            <param name="NewValue">The new value of the changing property.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be removed or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexPropertyChangedEventHandler`20">
            <summary>
            An event handler called whenever a vertex property changed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The property vertex sending this event.</param>
            <param name="Key">The key of the changed property.</param>
            <param name="OldValue">The old value of the changed property.</param>
            <param name="NewValue">The new value of the changed property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexPropertyRemovingEventHandler`20">
            <summary>
            An event handler called whenever a vertex property will be removed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The property vertex sending this event.</param>
            <param name="Key">The key of the property to be removed.</param>
            <param name="Value">The value of the property to be removed.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be removed or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexPropertyRemovedEventHandler`20">
            <summary>
            An event handler called whenever a vertex property was removed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The property vertex sending this event.</param>
            <param name="Key">The key of the removed property.</param>
            <param name="Value">The value of the removed property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexRemovingEventHandler`20">
            <summary>
            An event handler called whenever a vertex will be removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The vertex to be removed from the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the vertex should be removed or not.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexRemovedEventHandler`20">
            <summary>
            An event handler called whenever a vertex was removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The vertex removed from the graph.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeAddingEventHandler`20">
            <summary>
            An event handler called whenever an edge will be added to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The edge to be added to the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the edge should be added or not.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeAddedEventHandler`20">
            <summary>
            An event handler called whenever an edge was added to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The edge added to the graph.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgePropertyAddingEventHandler`20">
            <summary>
            An event handler called whenever an edge property will be added.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The property edge sending this event.</param>
            <param name="Key">The key of the property to be added.</param>
            <param name="Value">The value of the property to be added.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be added or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgePropertyAddedEventHandler`20">
            <summary>
            An event handler called whenever an edge property was added.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The property edge sending this event.</param>
            <param name="Key">The key of the added property.</param>
            <param name="Value">The value of the added property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgePropertyChangingEventHandler`20">
            <summary>
            An event handler called whenever an edge property will be changed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The property edge sending this event.</param>
            <param name="Key">The key of the changing property.</param>
            <param name="OldValue">The old value of the changing property.</param>
            <param name="NewValue">The new value of the changing property.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be removed or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgePropertyChangedEventHandler`20">
            <summary>
            An event handler called whenever a edge property changed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The property edge sending this event.</param>
            <param name="Key">The key of the changed property.</param>
            <param name="OldValue">The old value of the changed property.</param>
            <param name="NewValue">The new value of the changed property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgePropertyRemovingEventHandler`20">
            <summary>
            An event handler called whenever a edge property will be removed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The property edge sending this event.</param>
            <param name="Key">The key of the property to be removed.</param>
            <param name="Value">The value of the property to be removed.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgePropertyRemovedEventHandler`20">
            <summary>
            An event handler called whenever a edge property was removed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The property edge sending this event.</param>
            <param name="Key">The key of the removed property.</param>
            <param name="Value">The value of the removed property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeRemovingEventHandler`20">
            <summary>
            An event handler called whenever an edge will be removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The edge to be removed from the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the edge should be removed or not.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeRemovedEventHandler`20">
            <summary>
            An event handler called whenever an edge was removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Edge">The edge removed from the graph.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeAddingEventHandler`20">
            <summary>
            An event handler called whenever a multiedge will be added to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The multiedge to be added to the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the multiedge should be added or not.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeAddedEventHandler`20">
            <summary>
            An event handler called whenever a multiedge was added to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The multiedge added to the graph.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgePropertyAddingEventHandler`20">
            <summary>
            An event handler called whenever a multiedge property will be added.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The property multiedge sending this event.</param>
            <param name="Key">The key of the property to be added.</param>
            <param name="Value">The value of the property to be added.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be added or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgePropertyAddedEventHandler`20">
            <summary>
            An event handler called whenever a multiedge property was added.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The property multiedge sending this event.</param>
            <param name="Key">The key of the added property.</param>
            <param name="Value">The value of the added property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgePropertyChangingEventHandler`20">
            <summary>
            An event handler called whenever a multiedge property will be changed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The property multiedge sending this event.</param>
            <param name="Key">The key of the changing property.</param>
            <param name="OldValue">The old value of the changing property.</param>
            <param name="NewValue">The new value of the changing property.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be removed or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgePropertyChangedEventHandler`20">
            <summary>
            An event handler called whenever a multiedge property changed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The property multiedge sending this event.</param>
            <param name="Key">The key of the changed property.</param>
            <param name="OldValue">The old value of the changed property.</param>
            <param name="NewValue">The new value of the changed property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgePropertyRemovingEventHandler`20">
            <summary>
            An event handler called whenever a multiedge property will be removed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The property multiedge sending this event.</param>
            <param name="Key">The key of the property to be removed.</param>
            <param name="Value">The value of the property to be removed.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgePropertyRemovedEventHandler`20">
            <summary>
            An event handler called whenever a multiedge property was removed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The property multiedge sending this event.</param>
            <param name="Key">The key of the removed property.</param>
            <param name="Value">The value of the removed property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeRemovingEventHandler`20">
            <summary>
            An event handler called whenever a multiedge will be removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The multiedge to be removed from the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the multiedge should be removed or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeRemovedEventHandler`20">
            <summary>
            An event handler called whenever a multiedge was removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The multiedge removed from the graph.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeAddingEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge will be added to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="HyperEdge">The hyperedge to be added to the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the hyperedge should be added or not.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeAddedEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge was added to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="HyperEdge">The hyperedge added to the graph.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgePropertyAddingEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge property will be added.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the hyperedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="HyperEdge">The property hyperedge sending this event.</param>
            <param name="Key">The key of the property to be added.</param>
            <param name="Value">The value of the property to be added.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be added or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgePropertyAddedEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge property was added.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the hyperedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="HyperEdge">The property hyperedge sending this event.</param>
            <param name="Key">The key of the added property.</param>
            <param name="Value">The value of the added property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgePropertyChangingEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge property will be changed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the hyperedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="MultiEdge">The property multiedge sending this event.</param>
            <param name="Key">The key of the changing property.</param>
            <param name="OldValue">The old value of the changing property.</param>
            <param name="NewValue">The new value of the changing property.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the property should be removed or not.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgePropertyChangedEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge property changed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the hyperedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="HyperEdge">The property hyperedge sending this event.</param>
            <param name="Key">The key of the changed property.</param>
            <param name="OldValue">The old value of the changed property.</param>
            <param name="NewValue">The new value of the changed property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgePropertyRemovingEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge property will be removed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the hyperedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="HyperEdge">The property hyperedge sending this event.</param>
            <param name="Key">The key of the property to be removed.</param>
            <param name="Value">The value of the property to be removed.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgePropertyRemovedEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge property was removed.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the hyperedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="HyperEdge">The property hyperedge sending this event.</param>
            <param name="Key">The key of the removed property.</param>
            <param name="Value">The value of the removed property.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeRemovingEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge will be removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="HyperEdge">The hyperedge to be removed from the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the hyperedge should be removed or not.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeRemovedEventHandler`20">
            <summary>
            An event handler called whenever a hyperedge was removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">The graph sending this event.</param>
            <param name="HyperEdge">The hyperedge removed from the graph.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20">
            <summary>
            The interface of a generic property graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyGraph`20">
            <summary>
            The interface of a generic read-only property graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGraphElement`5">
            <summary>
            The common interface for all property graph elements:
            </summary>
            <typeparam name="TId">The type of the identifiers.</typeparam>
            <typeparam name="TRevId">The type of the revision identifiers.</typeparam>
            <typeparam name="TLabel">The taype of the labels.</typeparam>
            <typeparam name="TKey">The type of the property keys.</typeparam>
            <typeparam name="TValue">The type of the property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyVertexMethods`20">
            <summary>
            The interface for common read-only vertex methods.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyVertexMethods`20.VertexById(`0)">
            <summary>
            Return the vertex referenced by the given vertex identifier.
            If no vertex is referenced by the identifier return null.
            </summary>
            <param name="VertexId">A vertex identifier.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyVertexMethods`20.TryGetVertexById(`0,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}@)">
            <summary>
            Try to return the vertex referenced by the given vertex identifier.
            </summary>
            <param name="VertexId">A vertex identifier.</param>
            <param name="Vertex">A vertex.</param>
            <returns>True when success; false otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyVertexMethods`20.HasVertexId(`0)">
            <summary>
            Check if the given vertex identifier already exists within the graph.
            </summary>
            <param name="VertexId">A vertex identifier.</param>
            <returns>True when yes; false otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyVertexMethods`20.VerticesById(`0[])">
            <summary>
            Return the vertices referenced by the given array of vertex identifiers.
            If no vertex is referenced by a given identifier this value will be
            skipped.
            </summary>
            <param name="VertexIds">An array of vertex identifiers.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyVertexMethods`20.VerticesByLabel(`2[])">
            <summary>
            Return an enumeration of all vertices having one of the
            given vertex labels.
            </summary>
            <param name="VertexLabels">An array of vertex labels.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyVertexMethods`20.Vertices(de.ahzf.Vanaheimr.Blueprints.VertexFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Get an enumeration of all vertices in the graph.
            An optional vertex filter may be applied for filtering.
            </summary>
            <param name="VertexFilter">A delegate for vertex filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyVertexMethods`20.NumberOfVertices(de.ahzf.Vanaheimr.Blueprints.VertexFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Return the current number of vertices which match the given optional filter.
            When the filter is null, this method should implement an optimized
            way to get the currenty number of vertices.
            </summary>
            <param name="VertexFilter">A delegate for vertex filtering.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyMultiEdgeMethods`20">
            <summary>
            The interface for common read-only multiedge methods.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyMultiEdgeMethods`20.MultiEdgeById(`10)">
            <summary>
            Return the MultiEdge referenced by the given MultiEdge identifier.
            If no MultiEdge is referenced by a given identifier return null.
            </summary>
            <param name="MultiEdgeId">A MultiEdge identifier.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyMultiEdgeMethods`20.MultiEdgesById(`10[])">
            <summary>
            Return the MultiEdges referenced by the given array of MultiEdge identifiers.
            If no MultiEdge is referenced by a given identifier this value will be
            skipped.
            </summary>
            <param name="MultiEdgeIds">An array of MultiEdge identifiers.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyMultiEdgeMethods`20.HasMultiEdgeId(`10)">
            <summary>
            Check if the given multiedge identifier already exists within the graph.
            </summary>
            <param name="MultiEdgeId">A multiedge identifier.</param>
            <returns>True when yes; false otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyMultiEdgeMethods`20.MultiEdgesByLabel(`12[])">
            <summary>
            The enumeration of all multiedges having one of the given label.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyMultiEdgeMethods`20.MultiEdges(de.ahzf.Vanaheimr.Blueprints.MultiEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Get an enumeration of all MultiEdges in the graph.
            An optional MultiEdge filter may be applied for filtering.
            </summary>
            <param name="MultiEdgeFilter">A delegate for MultiEdge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyMultiEdgeMethods`20.NumberOfMultiEdges(de.ahzf.Vanaheimr.Blueprints.MultiEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Return the current number of MultiEdges matching the given optional MultiEdge filter.
            When the filter is null, this method should implement an optimized
            way to get the currenty number of edges.
            </summary>
            <param name="MultiEdgeFilter">A delegate for MultiEdge filtering.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyHyperEdgeMethods`20">
            <summary>
            The interface of a generic read-only property graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyHyperEdgeMethods`20.HyperEdgeById(`15)">
            <summary>
            Return the HyperEdge referenced by the given HyperEdge identifier.
            If no HyperEdge is referenced by a given identifier return null.
            </summary>
            <param name="HyperEdgeId">A HyperEdge identifier.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyHyperEdgeMethods`20.HyperEdgesById(`15[])">
            <summary>
            Return the HyperEdges referenced by the given array of HyperEdge identifiers.
            If no HyperEdge is referenced by a given identifier this value will be
            skipped.
            </summary>
            <param name="HyperEdgeIds">An array of HyperEdge identifiers.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyHyperEdgeMethods`20.HasHyperEdgeId(`15)">
            <summary>
            Check if the given hyperedge identifier already exists within the graph.
            </summary>
            <param name="HyperEdgeId">A hyperedge identifier.</param>
            <returns>True when yes; false otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyHyperEdgeMethods`20.HyperEdgesByLabel(`17[])">
            <summary>
            The enumeration of all hyperedges having one of the given label.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyHyperEdgeMethods`20.HyperEdges(de.ahzf.Vanaheimr.Blueprints.HyperEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Get an enumeration of all HyperEdges in the graph.
            An optional HyperEdge filter may be applied for filtering.
            </summary>
            <param name="HyperEdgeFilter">A delegate for HyperEdge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyHyperEdgeMethods`20.NumberOfHyperEdges(de.ahzf.Vanaheimr.Blueprints.HyperEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Return the current number of HyperEdges matching the given optional HyperEdge filter.
            When the filter is null, this method should implement an optimized
            way to get the currenty number of edges.
            </summary>
            <param name="HyperEdgeFilter">A delegate for HyperEdge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyGraph`20.Shutdown(System.String)">
            <summary>
            A shutdown function is required to properly close the graph.
            This is important for implementations that utilize disk-based serializations.
            </summary>
            <param name="Message">An optional message, e.g. a reason for the shutdown.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyGraph`20.ToString">
            <summary>
            Return a string representation of this generic property graph.
            </summary>
        </member>
        <member name="E:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyGraph`20.OnGraphShuttingdown">
            <summary>
            Called whenever a property graph will be shutting down.
            </summary>
        </member>
        <member name="E:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyGraph`20.OnGraphShutteddown">
            <summary>
            Called whenever a property graphy was shutted down.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IVertexMethods`20">
            <summary>
            The interface for common vertex methods.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IVertexMethods`20.AddVertex(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Adds the given vertex to the graph, and returns it again.
            An exception will be thrown if the vertex identifier is already being
            used by the graph to reference another vertex.
            </summary>
            <param name="Vertex">A Vertex.</param>
            <returns>The given IGenericPropertyVertex.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IVertexMethods`20.AddVertexIfNotExists(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.CheckVertexExistance{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Adds the given vertex to the graph if the given check existance
            delegate returns true and the vertex identifier is not already
            being used by the graph to reference another vertex.
            </summary>
            <param name="Vertex">A Vertex.</param>
            <param name="CheckExistanceDelegate">A delegate the check the existance of the given vertex within the given graph.</param>
            <returns>The given vertex.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IVertexMethods`20.RemoveVerticesById(`0[])">
            <summary>
            Remove the vertices identified by their VertexIds.
            </summary>
            <param name="VertexIds">An array of VertexIds of the vertices to remove.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IVertexMethods`20.RemoveVertices(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Remove the given array of vertices from the graph.
            Upon removing a vertex, all the edges by which the vertex
            is connected will be removed as well.
            </summary>
            <param name="Vertices">An array of vertices to be removed from the graph.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IVertexMethods`20.RemoveVertices(de.ahzf.Vanaheimr.Blueprints.VertexFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Remove any vertex matching the given vertex filter.
            </summary>
            <param name="VertexFilter">A delegate for vertex filtering.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IMultiEdgeMethods`20">
            <summary>
            The interface for common multiedge methods.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IMultiEdgeMethods`20.AddMultiEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add the given multiedge to the graph, and returns it again.
            An exception will be thrown if the multiedge identifier is already being
            used by the graph to reference another multiedge.
            </summary>
            <param name="MultiEdge">A generic property multiedge.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IMultiEdgeMethods`20.RemoveMultiEdgesById(`10[])">
            <summary>
            Remove the given array of multiedges identified by their MultiEdgeIds.
            </summary>
            <param name="MultiEdgeIds">An array of MultiEdgeIds of the multiedges to remove.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IMultiEdgeMethods`20.RemoveMultiEdges(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Remove the given array of multiedges from the graph.
            </summary>
            <param name="MultiEdges">An array of multiedges to be removed from the graph.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IMultiEdgeMethods`20.RemoveMultiEdges(de.ahzf.Vanaheimr.Blueprints.MultiEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Remove any multiedge matching the given multiedge filter.
            </summary>
            <param name="MultiEdgeFilter">A delegate for multiedge filtering.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IHyperEdgeMethods`20">
            <summary>
            The interface for common hyperedge methods.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IHyperEdgeMethods`20.AddHyperEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add the given hyperedge to the graph, and returns it again.
            An exception will be thrown if the hyperedge identifier is already being
            used by the graph to reference another hyperedge.
            </summary>
            <param name="HyperEdge">A generic property hyperedge.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IHyperEdgeMethods`20.RemoveHyperEdgesById(`15[])">
            <summary>
            Remove the given array of hyperedges identified by their HyperEdgeIds.
            </summary>
            <param name="HyperEdgeIds">An array of HyperEdgeIds of the hyperedges to remove.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IHyperEdgeMethods`20.RemoveHyperEdges(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Remove the given array of hyperedges from the graph.
            </summary>
            <param name="HyperEdges">An array of hyperedges to be removed from the graph.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IHyperEdgeMethods`20.RemoveHyperEdges(de.ahzf.Vanaheimr.Blueprints.HyperEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Remove any hyperedge matching the given hyperedge filter.
            </summary>
            <param name="HyperEdgeFilter">A delegate for hyperedge filtering.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGraphElement`5">
            <summary>
            The common interface for all property graph elements:
            </summary>
            <typeparam name="TId">The type of the identifiers.</typeparam>
            <typeparam name="TRevId">The type of the revision identifiers.</typeparam>
            <typeparam name="TLabel">The taype of the labels.</typeparam>
            <typeparam name="TKey">The type of the property keys.</typeparam>
            <typeparam name="TValue">The type of the property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddVertex(de.ahzf.Vanaheimr.Blueprints.VertexInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Create a new vertex, add it to the graph, and return the newly created vertex.
            If the object identifier is already being used by the graph to reference a vertex,
            then an exception will be thrown.
            </summary>
            <param name="VertexInitializer">A delegate to initialize the new vertex.</param>
            <returns>The newly created vertex as IPropertyVertex&lt;...&gt;.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddVertex(`2,de.ahzf.Vanaheimr.Blueprints.VertexInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Create a new vertex, add it to the graph, and return the newly created vertex.
            If the object identifier is already being used by the graph to reference a vertex,
            then an exception will be thrown.
            </summary>
            <param name="Label">The label (or type) of the vertex.</param>
            <param name="VertexInitializer">A delegate to initialize the new vertex.</param>
            <returns>The newly created vertex as IPropertyVertex&lt;...&gt;.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddVertex(`0,`2,de.ahzf.Vanaheimr.Blueprints.VertexInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Create a new vertex using the given vertex identifier, label and optional
            vertex initializer. An exception will be thrown if the given vertex
            identifier is already being used by the graph to reference an existing
            vertex.
            </summary>
            <param name="Id">The vertex identifier.</param>
            <param name="Label">The label (or type) of the vertex.</param>
            <param name="VertexInitializer">A delegate to initialize the new vertex.</param>
            <returns>The newly created vertex.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddVertexIfNotExists(`0,`2,de.ahzf.Vanaheimr.Blueprints.VertexInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.VertexInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Create a new vertex using the given vertex identifier, label and optional
            vertex initializer, if the given vertex identifier is not already being
            used by the graph to reference another vertex. An exception will be thrown
            if the given vertex identifier is already being to reference an existing
            vertex but having a different vertex label.
            </summary>
            <param name="Id">The vertex identifier.</param>
            <param name="Label">The label (or type) of the vertex.</param>
            <param name="VertexInitializer">A delegate to initialize the new vertex.</param>
            <returns>The newly created or already existing vertex.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},`7,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddEdgeIfNotExists(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},`7,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddEdge(`5,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},`7,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddEdgeIfNotExists(`5,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},`7,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},`7,de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},`5,`7,de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddMultiEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given enumeration
            of vertices to the graph.
            </summary>
            <param name="Vertices">An enumeration of vertices.</param>
            <returns>The new multiedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddMultiEdge(`12,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given multiedge label and
            an enumeration of vertices to the graph.
            </summary>
            <param name="Label">The multiedge label.</param>
            <param name="Vertices">An enumeration of vertices.</param>
            <returns>The new multiedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddMultiEdge(`12,de.ahzf.Vanaheimr.Blueprints.MultiEdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given multiedge label and
            an enumeration of vertices to the graph and initialize
            it by invoking the given MultiEdgeInitializer.
            </summary>
            <param name="Label">The multiedge label.</param>
            <param name="MultiEdgeInitializer">A delegate to initialize the newly generated multiedge.</param>
            <param name="Vertices">An enumeration of vertices.</param>
            <returns>The new multiedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddMultiEdge(`10,`12,de.ahzf.Vanaheimr.Blueprints.MultiEdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given multiedge label and
            an enumeration of vertices to the graph and initialize
            it by invoking the given MultiEdgeInitializer.
            </summary>
            <param name="MultiEdgeId">A MultiEdgeId. If none was given a new one will be generated.</param>
            <param name="Label">The multiedge label.</param>
            <param name="MultiEdgeInitializer">A delegate to initialize the newly generated multiedge.</param>
            <param name="Vertices">An enumeration of vertices.</param>
            <returns>The new multiedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddHyperEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given enumeration
            of vertices to the graph.
            </summary>
            <param name="Vertices">An enumeration of vertices.</param>
            <returns>The new multiedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddHyperEdge(`17,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given multiedge label and
            an enumeration of vertices to the graph.
            </summary>
            <param name="Label">The multiedge label.</param>
            <param name="Vertices">An enumeration of vertices.</param>
            <returns>The new multiedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddHyperEdge(`17,de.ahzf.Vanaheimr.Blueprints.HyperEdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given multiedge label and
            an enumeration of vertices to the graph and initialize
            it by invoking the given HyperEdgeInitializer.
            </summary>
            <param name="Label">The multiedge label.</param>
            <param name="HyperEdgeInitializer">A delegate to initialize the newly generated multiedge.</param>
            <param name="Vertices">An enumeration of vertices.</param>
            <returns>The new multiedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddHyperEdge(`15,`17,de.ahzf.Vanaheimr.Blueprints.HyperEdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given multiedge label and
            an enumeration of vertices to the graph and initialize
            it by invoking the given HyperEdgeInitializer.
            </summary>
            <param name="HyperEdgeId">A HyperEdgeId. If none was given a new one will be generated.</param>
            <param name="Label">The multiedge label.</param>
            <param name="HyperEdgeInitializer">A delegate to initialize the newly generated multiedge.</param>
            <param name="Vertices">An enumeration of vertices.</param>
            <returns>The new multiedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.AddHyperEdge(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},`17,de.ahzf.Vanaheimr.Blueprints.HyperEdgeInitializer{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Add a multiedge based on the given multiedge label and
            an enumeration of vertices to the graph and initialize
            it by invoking the given HyperEdgeInitializer.
            </summary>
            <param name="OutVertex">The outgoing vertex.</param>
            <param name="Label">The multiedge label.</param>
            <param name="HyperEdgeInitializer">A delegate to initialize the newly generated hyperedge.</param>
            <param name="InVertices">An enumeration of vertices.</param>
            <returns>The new hyperedge</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.Clear">
            <summary>
            Remove all the vertices, edges and hyperedges from the graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.OnVertexAddition">
            <summary>
            Called whenever a vertex will be or was added to the graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.OnVertexRemoval">
            <summary>
            Called whenever a vertex will be or was removed from the graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.OnEdgeAddition">
            <summary>
            Called whenever an edge will be or was added to the graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.OnEdgeRemoval">
            <summary>
            Called whenever an edge will be or was removed from the graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.OnMultiEdgeAddition">
            <summary>
            Called whenever a multiedge will be or was added to the graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.OnMultiEdgeRemoval">
            <summary>
            Called whenever a multiedge will be or was removed from the graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.OnHyperEdgeAddition">
            <summary>
            Called whenever a hyperedge will be or was added to the graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph`20.OnHyperEdgeRemoval">
            <summary>
            Called whenever a hyperedge will be or was removed from the graph.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId">
            <summary>
            A MultiEdgeId is unique identificator of a multiedge.
            </summary>    
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.AGraphElementId">
            <summary>
            A GraphElementId is unique identificator for any graph element.
            It's the base for the VertexId, EdgeId, MultiEdgeId and HyperEdgeId.
            </summary>    
        </member>
        <member name="F:de.ahzf.Vanaheimr.Blueprints.AGraphElementId._Id">
            <summary>
            The internal identification.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.#ctor">
            <summary>
            Generates a new GraphElementId based on a GUID.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.#ctor(System.Int32)">
            <summary>
            Generates a GraphElementId based on the content of an Int32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.#ctor(System.UInt32)">
            <summary>
            Generates a GraphElementId based on the content of an UInt32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.#ctor(System.Int64)">
            <summary>
            Generates a GraphElementId based on the content of an Int64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.#ctor(System.UInt64)">
            <summary>
            Generates a GraphElementId based on the content of an UInt64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.#ctor(System.String)">
            <summary>
            Generates a GraphElementId based on the content of String.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.#ctor(System.Uri)">
            <summary>
            Generates a GraphElementId based on the content of Uri.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.#ctor(de.ahzf.Vanaheimr.Blueprints.AGraphElementId)">
            <summary>
            Generates a GraphElementId based on the content of GraphElementId.
            </summary>
            <param name="GraphElementId">A GraphElementId</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.CompareTo(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.CompareTo(de.ahzf.Vanaheimr.Blueprints.AGraphElementId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="GraphElementId">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.Equals(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.Equals(de.ahzf.Vanaheimr.Blueprints.AGraphElementId)">
            <summary>
            Compares two GraphElementIds for equality.
            </summary>
            <param name="GraphElementId">A GraphElementId to compare with.</param>
            <returns>True if both match; False otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.GetHashCode">
            <summary>
            Return the HashCode of this object.
            </summary>
            <returns>The HashCode of this object.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.ToString">
            <summary>
            Return a string represtentation of this object.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.AGraphElementId.Length">
            <summary>
            Returns the length of the identificator.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.#ctor">
            <summary>
            Generates a new MultiEdgeId based on a GUID.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.#ctor(System.Int32)">
            <summary>
            Generates a MultiEdgeId based on the content of an Int32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.#ctor(System.UInt32)">
            <summary>
            Generates a MultiEdgeId based on the content of an UInt32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.#ctor(System.Int64)">
            <summary>
            Generates a MultiEdgeId based on the content of an Int64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.#ctor(System.UInt64)">
            <summary>
            Generates a MultiEdgeId based on the content of an UInt64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.#ctor(System.String)">
            <summary>
            Generates a MultiEdgeId based on the content of String.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.#ctor(System.Uri)">
            <summary>
            Generates a MultiEdgeId based on the content of Uri.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.#ctor(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Generates a MultiEdgeId based on the content of MultiEdgeId.
            </summary>
            <param name="MultiEdgeId">A MultiEdgeId</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.op_Equality(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId,de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="MultiEdgeId1">A MultiEdgeId.</param>
            <param name="MultiEdgeId2">Another MultiEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.op_Inequality(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId,de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="MultiEdgeId1">A MultiEdgeId.</param>
            <param name="MultiEdgeId2">Another MultiEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.op_LessThan(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId,de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="MultiEdgeId1">A MultiEdgeId.</param>
            <param name="MultiEdgeId2">Another MultiEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.op_LessThanOrEqual(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId,de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="MultiEdgeId1">A MultiEdgeId.</param>
            <param name="MultiEdgeId2">Another MultiEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.op_GreaterThan(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId,de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="MultiEdgeId1">A MultiEdgeId.</param>
            <param name="MultiEdgeId2">Another MultiEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.op_GreaterThanOrEqual(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId,de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="MultiEdgeId1">A MultiEdgeId.</param>
            <param name="MultiEdgeId2">Another MultiEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.CompareTo(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.CompareTo(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="MultiEdgeId">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.Equals(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.Equals(de.ahzf.Vanaheimr.Blueprints.MultiEdgeId)">
            <summary>
            Compares two MultiEdgeIds for equality.
            </summary>
            <param name="MultiEdgeId">A MultiEdgeId to compare with.</param>
            <returns>True if both match; False otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.GetHashCode">
            <summary>
            Return the HashCode of this object.
            </summary>
            <returns>The HashCode of this object.</returns>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.MultiEdgeId.NewMultiEdgeId">
            <summary>
            Generate a new MultiEdgeId.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions">
            <summary>
            Extensions to the IReadOnlyGenericPropertyVertex interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property vertex into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Vertex">A generic property vertex.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions.AsMutable``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given read only generic property vertex into a mutable vertex.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Vertex">A read only generic property vertex.</param>
            <returns>A mutable vertex.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions.UseProperty``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,System.Action{de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``4},System.Action{de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Vertex">An object implementing IGenericPropertyVertex.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccess">A delegate to call for the associated value of the given property key and its value.</param>
            <param name="OnError">A delegate to call for the associated value of the given property key when an error occurs.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions.PropertyFunc``21(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,System.Func{de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``4,``20},System.Func{de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``20})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <typeparam name="TResult">The type of the return value.</typeparam>
            <param name="Vertex">An object implementing IGenericPropertyVertex.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccessFunc">A delegate to call for the key and associated value of the given property key.</param>
            <param name="OnErrorFunc">A delegate to call for the key and associated value of the given property key.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions.Edges``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``7[])">
            <summary>
            Returns an enumeration of all edges having one
            of the given edge labels.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <param name="Vertex">A generic property vertex.</param>
            <param name="EdgeLabels">An array of edge labels.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions.Edges``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeFilter{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Returns a filtered enumeration of property edges.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Vertex">A generic property vertex.</param>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions.Degree``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``7[])">
            <summary>
            Returns the number of edges having one of the given edge labels.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <param name="Vertex">A generic property vertex.</param>
            <param name="EdgeLabels">An array of edge labels.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertexExtensions.Degree``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeFilter{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Returns the number of matching edges.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <param name="Vertex">A generic property vertex.</param>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeDirection">
            <summary>
            The direction of an edge.
            </summary>
        </member>
        <member name="F:de.ahzf.Vanaheimr.Blueprints.EdgeDirection.FORWARD">
            <summary>
            Forward
            </summary>
        </member>
        <member name="F:de.ahzf.Vanaheimr.Blueprints.EdgeDirection.BACKWARD">
            <summary>
            Backward
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdge`20">
            <summary>
            A hyperedge links multiple vertices. Along with its key/value properties,
            a hyperedge has no directionality but a label.
            The hyperedge label determines the type of relationship that exists
            between all these vertices.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the hyperedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdge`20.Graph">
            <summary>
            The associated property graph.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1">
            <summary>
            A special implementation of a DynamicObject for property graphs.
            </summary>
            <typeparam name="CompileTimeType">The compile time type of this DynamicGraphObject.</typeparam>
        </member>
        <member name="F:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1._RuntimeValue">
            <summary>
            The runtime value as compile time type.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1.#ctor(System.Linq.Expressions.Expression,`0)">
            <summary>
            Creates a new DynamicGraphElement helper.
            </summary>
            <param name="Expression">The expression representing this System.Dynamic.DynamicMetaObject during the dynamic binding process.</param>
            <param name="RuntimeValue">The runtime value represented by the System.Dynamic.DynamicMetaObject.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1.#ctor(System.Linq.Expressions.Expression,System.Dynamic.BindingRestrictions)">
            <summary>
            Creates a new DynamicGraphElement helper.
            </summary>
            <param name="Expression">The expression representing this System.Dynamic.DynamicMetaObject during the dynamic binding process.</param>
            <param name="BindingRestrictions">The set of binding restrictions under which the binding is valid.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1.#ctor(System.Linq.Expressions.Expression,System.Dynamic.BindingRestrictions,`0)">
            <summary>
            Creates a new DynamicGraphElement helper.
            </summary>
            <param name="Expression">The expression representing this System.Dynamic.DynamicMetaObject during the dynamic binding process.</param>
            <param name="BindingRestrictions">The set of binding restrictions under which the binding is valid.</param>
            <param name="RuntimeValue">The runtime value represented by the System.Dynamic.DynamicMetaObject.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1.GetDynamicMemberNames">
            <summary>
            Return all binder names.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1.BindSetMember(System.Dynamic.SetMemberBinder,System.Dynamic.DynamicMetaObject)">
            <summary>
            Assign the given value to the given binder name.
            </summary>
            <param name="SetMemberBinder">A SetMemberBinder.</param>
            <param name="DynamicMetaObject">A DynamicMetaObject.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1.BindGetMember(System.Dynamic.GetMemberBinder)">
            <summary>
            Return the value of the given binder name.
            </summary>
            <param name="GetMemberBinder">The GetMemberBinder.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DynamicGraphElement`1.BindInvokeMember(System.Dynamic.InvokeMemberBinder,System.Dynamic.DynamicMetaObject[])">
            <summary>
            Invoke the given binder.
            </summary>
            <param name="InvokeMemberBinder">A binder to invoke.</param>
            <param name="Arguments">Arguments.</param>
            <returns>The result of the invocation.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeIdCreatorDelegate`20">
            <summary>
            A delegate for creating a new HyperEdgeId
            (if no one was provided by the user).
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <returns>A unique hyperedge identification.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeCreatorDelegate`20">
            <summary>
            A delegate for creating a new hyperedge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="HyperEdgeId">The Id of this hyperedge.</param>
            <param name="HyperEdgeLabel">The label of this hyperedge.</param>
            <param name="HyperEdgeInitializer">A delegate to initialize this hyperedge with custom data.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeInitializer`20">
            <summary>
            A delegate for hyperedge initializing.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="HyperEdge">A generic property hyperedge.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeCollectionInitializer`20">
            <summary>
            A delegate for creating a new hyperedge collection.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexRemovingEventHandler2`20">
            <summary>
            An event handler called whenever a vertex will be removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The vertex to be removed from the graph.</param>
            <param name="Vote">A veto vote is a simple way to ask multiple event subscribers if the vertex should be removed or not.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexRemovedEventHandler2`20">
            <summary>
            An event handler called whenever a vertex was removed from the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Graph">The property graph sending this event.</param>
            <param name="Vertex">The vertex removed from the graph.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge`20">
            <summary>
            A hyperedge links multiple vertices. Along with its key/value properties,
            a hyperedge has no directionality but a label.
            The hyperedge label determines the type of relationship that exists
            between all these vertices.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the hyperedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge`20.OnVertexAddition">
            <summary>
            Called whenever a vertex will be or was added to the hyperedge.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge`20.OnVertexRemoval">
            <summary>
            Called whenever a vertex will be or was removed from the hyperedge.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGraphElementExtensions">
            <summary>
            Extensions to the IGraphElement interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGraphElementExtensions.AsDynamic``5(de.ahzf.Vanaheimr.Blueprints.IGraphElement{``0,``1,``2,``3,``4})">
            <summary>
            Converts the given IGraphElement into a dynamic object.
            </summary>
            <typeparam name="TId">The type of the identifiers.</typeparam>
            <typeparam name="TRevId">The type of the revision identifiers.</typeparam>
            <typeparam name="TKey">The type of the property keys.</typeparam>
            <typeparam name="TValue">The type of the property values.</typeparam>
            <param name="GraphElement">An object implementing IGraphElement&lt;...&gt;.</param>
            <returns>A dynamic graph element.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeFilter`20">
            <summary>
            A delegate for edge filtering.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Edge">An Edge.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeId">
            <summary>
            An EdgeId is unique identificator of an edge.
            </summary>    
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.#ctor">
            <summary>
            Generates a new EdgeId based on a GUID.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.#ctor(System.Int32)">
            <summary>
            Generates a EdgeId based on the content of an Int32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.#ctor(System.UInt32)">
            <summary>
            Generates a EdgeId based on the content of an UInt32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.#ctor(System.Int64)">
            <summary>
            Generates a EdgeId based on the content of an Int64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.#ctor(System.UInt64)">
            <summary>
            Generates a EdgeId based on the content of an UInt64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.#ctor(System.String)">
            <summary>
            Generates a EdgeId based on the content of String.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.#ctor(System.Uri)">
            <summary>
            Generates a EdgeId based on the content of Uri.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.#ctor(de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Generates a EdgeId based on the content of EdgeId.
            </summary>
            <param name="EdgeId">A EdgeId</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.op_Equality(de.ahzf.Vanaheimr.Blueprints.EdgeId,de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="EdgeId1">A EdgeId.</param>
            <param name="EdgeId2">Another EdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.op_Inequality(de.ahzf.Vanaheimr.Blueprints.EdgeId,de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="EdgeId1">A EdgeId.</param>
            <param name="EdgeId2">Another EdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.op_LessThan(de.ahzf.Vanaheimr.Blueprints.EdgeId,de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="EdgeId1">A EdgeId.</param>
            <param name="EdgeId2">Another EdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.op_LessThanOrEqual(de.ahzf.Vanaheimr.Blueprints.EdgeId,de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="EdgeId1">A EdgeId.</param>
            <param name="EdgeId2">Another EdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.op_GreaterThan(de.ahzf.Vanaheimr.Blueprints.EdgeId,de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="EdgeId1">A EdgeId.</param>
            <param name="EdgeId2">Another EdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.op_GreaterThanOrEqual(de.ahzf.Vanaheimr.Blueprints.EdgeId,de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="EdgeId1">A EdgeId.</param>
            <param name="EdgeId2">Another EdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.CompareTo(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.CompareTo(de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="EdgeId">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.Equals(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.Equals(de.ahzf.Vanaheimr.Blueprints.EdgeId)">
            <summary>
            Compares two EdgeIds for equality.
            </summary>
            <param name="EdgeId">An EdgeId to compare with.</param>
            <returns>True if both match; False otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgeId.GetHashCode">
            <summary>
            Return the HashCode of this object.
            </summary>
            <returns>The HashCode of this object.</returns>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.EdgeId.NewEdgeId">
            <summary>
            Generate a new EdgeId.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdgeExtensions">
            <summary>
            Extensions to the IReadOnlyGenericPropertyMultiEdge interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdgeExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given multiedge into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="MultiEdge">A generic property multiedge.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdgeExtensions.AsMutable``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given read only generic property multiedge into a mutable multiedge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="MultiEdge">A read only generic property multiedge.</param>
            <returns>A mutable multiedge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdgeExtensions.UseProperty``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``13,System.Action{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``13,``14},System.Action{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``13})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="IGenericPropertyMultiEdge">An object implementing IGenericPropertyMultiEdge.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccess">A delegate to call for the associated value of the given property key and its value.</param>
            <param name="OnError">A delegate to call for the associated value of the given property key when an error occurs.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdgeExtensions.PropertyFunc``21(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``13,System.Func{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``13,``14,``20},System.Func{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``13,``20})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <typeparam name="TResult">The type of the return value.</typeparam>
            <param name="IGenericPropertyMultiEdge">An object implementing IGenericPropertyMultiEdge.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccessFunc">A delegate to call for the key and associated value of the given property key.</param>
            <param name="OnErrorFunc">A delegate to call for the key and associated value of the given property key.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeEdgeSelector`20">
            <summary>
            A delegate for deciding if an edge matches a multiedge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="MultiEdge">A generic property multiedge.</param>
            <returns></returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge`20">
            <summary>
            A multiedge links multiple vertices. Along with its key/value properties,
            a multiedge has both a directionality and a label.
            The directionality determines which vertex is the tail vertex
            (out vertex) and which vertices are the head vertices (in vertices).
            The multiedge label determines the type of relationship that exists
            between these vertices.
            Diagrammatically, outVertex ---label---> inVertex1.
                                                 \--> inVertex2.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge`20.EdgesByLabel(`7[])">
            <summary>
            The enumeration of all edges connected by this multiedge.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge`20.Edges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            The enumeration of all edges connected by this multiedge.
            An optional edge filter may be applied for filtering.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge`20.NumberOfEdges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Return the current number of edges which match the given optional filter.
            When the filter is null, this method should implement an optimized
            way to get the currenty number of edges.
            </summary>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge`20.Graph">
            <summary>
            The associated property graph.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdgeExtensions">
            <summary>
            Extensions to the IGenericPropertyEdge interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdgeExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given edge into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Edge">A generic property edge.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdgeExtensions.AsMutable``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given read only generic property edge into a mutable edge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Edge">A read only generic property edge.</param>
            <returns>A mutable edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdgeExtensions.UseProperty``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``8,System.Action{de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``8,``9},System.Action{de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``8})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="Edge">A generic proeprty edge.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccess">A delegate to call for the associated value of the given property key and its value.</param>
            <param name="OnError">A delegate to call for the associated value of the given property key when an error occurs.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdgeExtensions.PropertyFunc``21(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``8,System.Func{de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``8,``9,``20},System.Func{de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``8,``20})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <typeparam name="TResult">The type of the return value.</typeparam>
            <param name="Edge">A generic property edge.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccessFunc">A delegate to call for the key and associated value of the given property key.</param>
            <param name="OnErrorFunc">A delegate to call for the key and associated value of the given property key.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdgeExtensions">
            <summary>
            Extensions to the IGenericPropertyHyperEdge interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdgeExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given hyperedge into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="HyperEdge">A generic property hyperedge.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdgeExtensions.AsReadOnly``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property hyperedge into a read only hyperedge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="HyperEdge">A generic property hyperedge.</param>
            <returns>A read only hyperedge.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20">
            <summary>
            A vertex maintains pointers to both a set of incoming and outgoing edges.
            The outgoing edges are those edges for which the vertex is the tail.
            The incoming edges are those edges for which the vertex is the head.
            Diagrammatically, ---inEdges---> vertex ---outEdges--->.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.OutEdges(`7[])">
            <summary>
            The edges emanating from, or leaving, this vertex
            filtered by their label. If no label was given,
            all edges will be returned.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.OutEdges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            The edges emanating from, or leaving, this vertex
            filtered by the given edge filter delegate.
            </summary>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.OutDegree(`7[])">
            <summary>
            The number of edges emanating from, or leaving, this vertex
            filtered by their label. If no label was given,
            all edges will be returned.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.OutDegree(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            The number of edges emanating from, or leaving, this vertex
            filtered by the given edge filter delegate.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.InEdges(`7[])">
            <summary>
            The edges incoming to, or arriving at, this vertex
            filtered by their label. If no label was given,
            all edges will be returned.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.InEdges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            The edges incoming to, or arriving at, this vertex
            filtered by the given edge filter delegate.
            </summary>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.InDegree(`7[])">
            <summary>
            The number of edges incoming to, or arriving at, this vertex
            filtered by their label. If no label was given,
            all edges will be returned.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.InDegree(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            The number of edges incoming to, or arriving at, this vertex
            filtered by the given edge filter delegate.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.MultiEdges(`12[])">
            <summary>
            The multiedges emanating from, or leaving, this vertex
            filtered by their label. If no label was given,
            all multiedges will be returned.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.MultiEdges(de.ahzf.Vanaheimr.Blueprints.MultiEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            The multiedges emanating from, or leaving, this vertex
            filtered by the given multiedge filter delegate.
            </summary>
            <param name="MultiEdgeFilter">A delegate for multiedge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.HyperEdges(`17[])">
            <summary>
            The hyperedges emanating from, or leaving, this vertex
            filtered by their label. If no label was given,
            all hyperedges will be returned.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.HyperEdges(de.ahzf.Vanaheimr.Blueprints.HyperEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            The hyperedges emanating from, or leaving, this vertex
            filtered by the given hyperedge filter delegate.
            </summary>
            <param name="HyperEdgeFilter">A delegate for hyperedge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.ToString">
            <summary>
            Return a string representation of this generic property vertex.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.Graph">
            <summary>
            The associated property graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex`20.AsSubgraph">
            <summary>
            Access this property vertex as a subgraph of the hosting property graph.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeFilter`20">
            <summary>
            A delegate for hyperedge filtering.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="HyperEdge">A generic property hyperedge.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.CheckHyperEdgeExistance`20">
            <summary>
            A delegate to check the existance of a hyperedge within the given graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="HyperEdge">A generic property hyperedge.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IEdgeMethodsExtentions">
            <summary>
            Extention methods for the IEdgeMethods interface.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IEdgeMethodsExtentions.Edges``20(de.ahzf.Vanaheimr.Blueprints.IEdgeMethods{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``8)">
            <summary>
            Return an enumeration of all edges in the graph
            having the given property key.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="IEdgeMethods">An object implementing IEdgeMethods, e.g. a generic property graph.</param>
            <param name="Key">A property key.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IEdgeMethodsExtentions.Edges``20(de.ahzf.Vanaheimr.Blueprints.IEdgeMethods{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``8,``9)">
            <summary>
            Return an enumeration of all edges in the graph
            having the given property key and associated value.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="IEdgeMethods">An object implementing IEdgeMethods, e.g. a generic property graph.</param>
            <param name="Key">A property key.</param>
            <param name="Value">A property value.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgesException">
            <summary>
            An exception during hyperedge processing occurred!
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgesException.#ctor(System.String,System.Exception)">
            <summary>
            An exception during hyperedge processing occurred!
            </summary>
            <param name="Message">The message that describes the error.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.DuplicateHyperEdgeIdException`1">
            <summary>
            A duplicate HyperEdgeId was detected.
            </summary>
            <typeparam name="TId">The type of the hyperedge ids.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DuplicateHyperEdgeIdException`1.#ctor(`0,System.Exception)">
            <summary>
            A duplicate hyperedge identification was detected.
            </summary>
            <param name="HyperEdgeId">The unique id of the hyperedge.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexFilter`20">
            <summary>
            A delegate for vertex filtering.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Vertex">A vertex.</param>
            <returns></returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeIdCreatorDelegate`20">
            <summary>
            A delegate for creating a new MultiEdgeId
            (if no one was provided by the user).
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <returns>A unique multiedge identification.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeCreatorDelegate`20">
            <summary>
            A delegate for creating a new multiedge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="IGenericPropertyGraph">The associated generic property graph.</param>
            <param name="EdgeSelector">A delegate for deciding if an edge matches a multiedge.</param>
            <param name="MultiEdgeId">The Id of this multiedge.</param>
            <param name="MultiEdgeLabel">The label of this multiedge.</param>
            <param name="MultiEdgeInitializer">A delegate to initialize this multiedge with custom data.</param>
            <returns></returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeInitializer`20">
            <summary>
            A delegate for multiedge initializing.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="MultiEdge">A generic property multiedge.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeCollectionInitializer`20">
            <summary>
            A delegate for creating a new multiedge collection.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge`20">
            <summary>
            A multiedge links multiple vertices. Along with its key/value properties,
            a multiedge has both a directionality and a label.
            The directionality determines which vertex is the tail vertex
            (out vertex) and which vertices are the head vertices (in vertices).
            The multiedge label determines the type of relationship that exists
            between these vertices.
            Diagrammatically, outVertex ---label---> inVertex1.
                                                 \--> inVertex2.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.CheckVertexExistance`20">
            <summary>
            A delegate to check the existance of a vertex within the given graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="Vertex">A generic property vertex.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IDynamicGraphElement`1">
            <summary>
            An interface for simplified interaction with dynamic objects.
            </summary>
            <typeparam name="CompileTimeType">The compile time type of the DynamicMetaObject.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IDynamicGraphElement`1.GetDynamicMemberNames">
            <summary>
            Return all binder names.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IDynamicGraphElement`1.SetMember(System.String,System.Object)">
            <summary>
            Assign the given value to the given binder name.
            </summary>
            <param name="Binder">A binder name.</param>
            <param name="Object">A value.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IDynamicGraphElement`1.GetMember(System.String)">
            <summary>
            Return the value of the given binder name.
            </summary>
            <param name="Binder">A binder name.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IDynamicGraphElement`1.DeleteMember(System.String)">
            <summary>
            Delete the given binder name.
            </summary>
            <param name="Binder">A binder name.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexId">
            <summary>
            A VertexId is unique identificator of a vertex.
            </summary>    
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.#ctor">
            <summary>
            Generates a new VertexId based on a GUID.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.#ctor(System.Int32)">
            <summary>
            Generates a VertexId based on the content of an Int32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.#ctor(System.UInt32)">
            <summary>
            Generates a VertexId based on the content of an UInt32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.#ctor(System.Int64)">
            <summary>
            Generates a VertexId based on the content of an Int64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.#ctor(System.UInt64)">
            <summary>
            Generates a VertexId based on the content of an UInt64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.#ctor(System.String)">
            <summary>
            Generates a VertexId based on the content of String.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.#ctor(System.Uri)">
            <summary>
            Generates a VertexId based on the content of Uri.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.#ctor(de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Generates a VertexId based on the content of VertexId.
            </summary>
            <param name="VertexId">A VertexId</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.op_Equality(de.ahzf.Vanaheimr.Blueprints.VertexId,de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="VertexId1">A VertexId.</param>
            <param name="VertexId2">Another VertexId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.op_Inequality(de.ahzf.Vanaheimr.Blueprints.VertexId,de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="VertexId1">A VertexId.</param>
            <param name="VertexId2">Another VertexId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.op_LessThan(de.ahzf.Vanaheimr.Blueprints.VertexId,de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="VertexId1">A VertexId.</param>
            <param name="VertexId2">Another VertexId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.op_LessThanOrEqual(de.ahzf.Vanaheimr.Blueprints.VertexId,de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="VertexId1">A VertexId.</param>
            <param name="VertexId2">Another VertexId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.op_GreaterThan(de.ahzf.Vanaheimr.Blueprints.VertexId,de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="VertexId1">A VertexId.</param>
            <param name="VertexId2">Another VertexId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.op_GreaterThanOrEqual(de.ahzf.Vanaheimr.Blueprints.VertexId,de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="VertexId1">A VertexId.</param>
            <param name="VertexId2">Another VertexId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.CompareTo(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.CompareTo(de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="VertexId">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.Equals(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.Equals(de.ahzf.Vanaheimr.Blueprints.VertexId)">
            <summary>
            Compares two VertexIds for equality.
            </summary>
            <param name="VertexId">A VertexId to compare with.</param>
            <returns>True if both match; False otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.VertexId.GetHashCode">
            <summary>
            Return the HashCode of this object.
            </summary>
            <returns>The HashCode of this object.</returns>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.VertexId.NewVertexId">
            <summary>
            Generate a new VertexId.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadeOnlyGenericPropertyGraphExtensions">
            <summary>
            Extensions to the IGenericPropertyGraph interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadeOnlyGenericPropertyGraphExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property graph into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadeOnlyGenericPropertyGraphExtensions.AsMutable``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given read-only generic property graph into a mutable graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A read-only generic property graph.</param>
            <returns>A mutable generic property graph.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadeOnlyGenericPropertyGraphExtensions.UseProperty``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,System.Action{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``4},System.Action{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="IGenericPropertyGraph">An object implementing IGenericPropertyGraph.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccess">A delegate to call for the associated value of the given property key and its value.</param>
            <param name="OnError">A delegate to call for the associated value of the given property key when an error occurs.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadeOnlyGenericPropertyGraphExtensions.PropertyFunc``21(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,System.Func{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``4,``20},System.Func{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``20})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <typeparam name="TResult">The type of the return value.</typeparam>
            <param name="IGenericPropertyGraph">An object implementing IGenericPropertyGraph.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccessFunc">A delegate to call for the key and associated value of the given property key.</param>
            <param name="OnErrorFunc">A delegate to call for the key and associated value of the given property key.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IVertexMethodsExtentions">
            <summary>
            Extention methods for the IVertexMethods interface.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IVertexMethodsExtentions.Vertices``20(de.ahzf.Vanaheimr.Blueprints.IVertexMethods{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3)">
            <summary>
            Return an enumeration of all vertices in the graph
            having the given property key.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="IVertexMethods">An object implementing IVertexMethods, e.g. a generic property graph.</param>
            <param name="Key">A property key.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IVertexMethodsExtentions.Vertices``20(de.ahzf.Vanaheimr.Blueprints.IVertexMethods{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``4)">
            <summary>
            Return an enumeration of all vertices in the graph
            having the given property key and associated value.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="IVertexMethods">An object implementing IVertexMethods, e.g. a generic property graph.</param>
            <param name="Key">A property key.</param>
            <param name="Value">A property value.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions">
            <summary>
            Extensions to the IGenericPropertyVertex interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property vertex into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Vertex">A generic property vertex.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AsReadOnly``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property vertex into a read only vertex.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Vertex">A generic property vertex.</param>
            <returns>A read only vertex.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``7,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``5,``7,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdgeIfNotExists``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``5,``7,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``7,de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``5,``7,de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add the given edge to the graph, and returns it again.
            An exception will be thrown if the edge identifier is already being
            used by the graph to reference another edge.
            </summary>
            <param name="Edge">An edge.</param>
            <returns>The given edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdgeIfNotExists``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.CheckEdgeExistance{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add the given edge to the graph, and returns it again.
            An exception will be thrown if the edge identifier is already being
            used by the graph to reference another edge.
            </summary>
            <param name="Edge">An edge.</param>
            <param name="CheckExistanceDelegate">A delegate the check the existance of the given edge within the given graph.</param>
            <returns>The given edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.SetVertexProperty``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``4)">
            <summary>
            Set a property on a vertex and return the vertex interface.
            </summary>
            <param name="Vertex">The vertex.</param>
            <param name="Key">The key of the vertex property.</param>
            <param name="Value">The value of the property.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge_chainable``20(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``7,de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge_chainable``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``5,``7,de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdgeIfNotExists_chainable``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``5,``7,de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            OutVertex --Label-> InVertex is the "Semantic Web Notation" ;)
            </summary>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge_chainable``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``7,de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge_chainable``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``5,``7,de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add an edge to the graph. The added edge requires a tail vertex,
            a head vertex, an identifier, a label and initializes the edge
            by invoking the given EdgeInitializer.
            </summary>
            <param name="OutVertex">The vertex on the tail of the edge.</param>
            <param name="InVertex">The vertex on the head of the edge.</param>
            <param name="EdgeId">A EdgeId. If none was given a new one will be generated.</param>
            <param name="Label">The label associated with the edge.</param>
            <param name="EdgeInitializer">A delegate to initialize the new edge.</param>
            <returns>The new edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdge_chainable``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add the given edge to the graph, and returns it again.
            An exception will be thrown if the edge identifier is already being
            used by the graph to reference another edge.
            </summary>
            <param name="Edge">An edge.</param>
            <returns>The given edge.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertexExtensions.AddEdgeIfNotExists_chainable``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.CheckEdgeExistance{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Add the given edge to the graph, and returns it again.
            An exception will be thrown if the edge identifier is already being
            used by the graph to reference another edge.
            </summary>
            <param name="Edge">An edge.</param>
            <param name="CheckExistanceDelegate">A delegate the check the existance of the given edge within the given graph.</param>
            <returns>The given edge.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdgeExtensions">
            <summary>
            Extensions to the IGenericPropertyMultiEdge interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdgeExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given multiedge into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="MultiEdge">A generic property multiedge.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdgeExtensions.AsReadOnly``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property multiedge into a read only multiedge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="MultiEdge">A generic property multiedge.</param>
            <returns>A read-only multiedge.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgesException">
            <summary>
            An exception during multiedge processing occurred!
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.MultiEdgesException.#ctor(System.String,System.Exception)">
            <summary>
            An exception during multiedge processing occurred!
            </summary>
            <param name="Message">The message that describes the error.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.DuplicateMultiEdgeIdException`1">
            <summary>
            A duplicate MultiEdgeId was detected.
            </summary>
            <typeparam name="TId">The type of the multiedge ids.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DuplicateMultiEdgeIdException`1.#ctor(`0,System.Exception)">
            <summary>
            A duplicate multiedge identification was detected.
            </summary>
            <param name="MultiEdgeId">The unique id of the multiedge.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge`20">
            <summary>
            An edge links two vertices. Along with its key/value properties,
            an edge has both a directionality and a label.
            The directionality determines which vertex is the tail vertex
            (out vertex) and which vertex is the head vertex (in vertex).
            The edge label determines the type of relationship that exists
            between the two vertices.
            Diagrammatically, outVertex ---label---> inVertex.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge`20.Graph">
            <summary>
            The associated property graph.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge`20.Weight">
            <summary>
            The edge weight associated with this edge.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge`20.OutVertex">
            <summary>
            The vertex at the tail of this edge.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge`20.InVertex">
            <summary>
            The vertex at the head of this edge.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId">
            <summary>
            A HyperEdgeId is unique identificator of a hyperedge.
            </summary>    
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.#ctor">
            <summary>
            Generates a new HyperEdgeId based on a GUID.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.#ctor(System.Int32)">
            <summary>
            Generates a HyperEdgeId based on the content of an Int32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.#ctor(System.UInt32)">
            <summary>
            Generates a HyperEdgeId based on the content of an UInt32.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.#ctor(System.Int64)">
            <summary>
            Generates a HyperEdgeId based on the content of an Int64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.#ctor(System.UInt64)">
            <summary>
            Generates a HyperEdgeId based on the content of an UInt64.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.#ctor(System.String)">
            <summary>
            Generates a HyperEdgeId based on the content of String.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.#ctor(System.Uri)">
            <summary>
            Generates a HyperEdgeId based on the content of Uri.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.#ctor(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Generates a HyperEdgeId based on the content of HyperEdgeId.
            </summary>
            <param name="HyperEdgeId">A HyperEdgeId</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.op_Equality(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId,de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="HyperEdgeId1">A HyperEdgeId.</param>
            <param name="HyperEdgeId2">Another HyperEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.op_Inequality(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId,de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="HyperEdgeId1">A HyperEdgeId.</param>
            <param name="HyperEdgeId2">Another HyperEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.op_LessThan(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId,de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="HyperEdgeId1">A HyperEdgeId.</param>
            <param name="HyperEdgeId2">Another HyperEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.op_LessThanOrEqual(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId,de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="HyperEdgeId1">A HyperEdgeId.</param>
            <param name="HyperEdgeId2">Another HyperEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.op_GreaterThan(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId,de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="HyperEdgeId1">A HyperEdgeId.</param>
            <param name="HyperEdgeId2">Another HyperEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.op_GreaterThanOrEqual(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId,de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="HyperEdgeId1">A HyperEdgeId.</param>
            <param name="HyperEdgeId2">Another HyperEdgeId.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.CompareTo(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.CompareTo(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="HyperEdgeId">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.Equals(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.Equals(de.ahzf.Vanaheimr.Blueprints.HyperEdgeId)">
            <summary>
            Compares two HyperEdgeIds for equality.
            </summary>
            <param name="HyperEdgeId">A HyperEdgeId to compare with.</param>
            <returns>True if both match; False otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.GetHashCode">
            <summary>
            Return the HashCode of this object.
            </summary>
            <returns>The HashCode of this object.</returns>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.HyperEdgeId.NewHyperEdgeId">
            <summary>
            Generate a new HyperEdgeId.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraphExtensions">
            <summary>
            Extensions to the IGenericPropertyGraph interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraphExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property graph into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraphExtensions.AsReadOnly``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property graph into a read-only graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="IGenericPropertyGraph">A generic property graph.</param>
            <returns>A read-only generic property graph.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraphExtensions.UseProperty``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,System.Action{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``4},System.Action{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="IGenericPropertyGraph">An object implementing IGenericPropertyGraph.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccess">A delegate to call for the associated value of the given property key and its value.</param>
            <param name="OnError">A delegate to call for the associated value of the given property key when an error occurs.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraphExtensions.PropertyFunc``21(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,System.Func{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``4,``20},System.Func{de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``3,``20})">
            <summary>
            Call the given delegate if the given property key is assigned.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <typeparam name="TResult">The type of the return value.</typeparam>
            <param name="IGenericPropertyGraph">An object implementing IGenericPropertyGraph.</param>
            <param name="PropertyKey">The property key.</param>
            <param name="OnSuccessFunc">A delegate to call for the key and associated value of the given property key.</param>
            <param name="OnErrorFunc">A delegate to call for the key and associated value of the given property key.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraphExtensions.AddDoubleEdge``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``7,``5,de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Adds an edge and another one in the opposite direction to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="OutVertex"></param>
            <param name="InVertex"></param>
            <param name="Label">A label for both edges.</param>
            <param name="EdgeId">An EdgeId. If none was given a new one will be generated.</param>
            <param name="EdgeInitializer">A delegate to initialize the first generated edge.</param>
            <returns>Both new edges.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraphExtensions.AddDoubleEdge``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyVertex{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``5,``5,``7,``7,``7,de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},de.ahzf.Vanaheimr.Blueprints.EdgeInitializer{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Adds an edge and another one in the opposite direction to the graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="OutVertex"></param>
            <param name="InVertex"></param>
            <param name="EdgeId1">An EdgeId. If none was given a new one will be generated.</param>
            <param name="EdgeId2">An EdgeId. If none was given a new one will be generated.</param>
            <param name="Label">A label for both edges.</param>
            <param name="Label1">A label for the first edge.</param>
            <param name="Label2">A label for the second edge.</param>
            <param name="EdgeInitializer1">A delegate to initialize the first generated edge.</param>
            <param name="EdgeInitializer2">A delegate to initialize the second generated edge.</param>
            <returns>Both new edges.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraphExtensions.VertexPropertiesToEdges``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyGraph{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19},``2,``3,System.Func{``4,``0},``7,de.ahzf.Vanaheimr.Blueprints.EdgeDirection,System.Boolean)">
            <summary>
            Transform the given properties of the given vertices into
            egdes of the given labels and direction.
            </summary>
            <param name="graph">A generic property graph.</param>
            <param name="VertexLabel">The label of the vertices to process.</param>
            <param name="PropertyKey">The property key of these vertices providing some sort of edge id.</param>
            <param name="IdCreator">A delegate to transform the property value into a valid edge id.</param>
            <param name="EdgeLabel">The label of the new edge to create.</param>
            <param name="Direction">The direction of the edge to create.</param>
            <param name="RemoveProperty">Whether to remove or not to remove the property after edge creation.</param>
            <returns>The number of processed edges.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.SemanticProperty">
            <summary>
            A semantic property key combines a property key with semantic type information.
            </summary>    
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.#ctor(System.String,System.String)">
            <summary>
            Creates a new semantic property key.
            </summary>
            <param name="Key">The key for the given RDF statement within your domain.</param>
            <param name="Description">An optional description for this RDF mapping.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.#ctor(System.Uri,System.String,System.String,System.String)">
            <summary>
            Creates a new semantic property key.
            </summary>
            <param name="Prefix">The RDF prefix, e.g. "http://xmlns.com/foaf/0.1"</param>
            <param name="Suffix">The RDF suffix, e.g. "knows"</param>
            <param name="Key">The key for the given RDF statement within your domain, as the suffix may not be unique.</param>
            <param name="Description">An optional description for this RDF mapping.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.op_Equality(de.ahzf.Vanaheimr.Blueprints.SemanticProperty,de.ahzf.Vanaheimr.Blueprints.SemanticProperty)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="mySemanticPropertyKey1">A SemanticPropertyKey.</param>
            <param name="mySemanticPropertyKey2">Another SemanticPropertyKey.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.op_Inequality(de.ahzf.Vanaheimr.Blueprints.SemanticProperty,de.ahzf.Vanaheimr.Blueprints.SemanticProperty)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="mySemanticPropertyKey1">A SemanticPropertyKey.</param>
            <param name="mySemanticPropertyKey2">Another SemanticPropertyKey.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.op_LessThan(de.ahzf.Vanaheimr.Blueprints.SemanticProperty,de.ahzf.Vanaheimr.Blueprints.SemanticProperty)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="mySemanticPropertyKey1">A SemanticPropertyKey.</param>
            <param name="mySemanticPropertyKey2">Another SemanticPropertyKey.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.op_GreaterThan(de.ahzf.Vanaheimr.Blueprints.SemanticProperty,de.ahzf.Vanaheimr.Blueprints.SemanticProperty)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="mySemanticPropertyKey1">A SemanticPropertyKey.</param>
            <param name="mySemanticPropertyKey2">Another SemanticPropertyKey.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.op_LessThanOrEqual(de.ahzf.Vanaheimr.Blueprints.SemanticProperty,de.ahzf.Vanaheimr.Blueprints.SemanticProperty)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="mySemanticPropertyKey1">A SemanticPropertyKey.</param>
            <param name="mySemanticPropertyKey2">Another SemanticPropertyKey.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.op_GreaterThanOrEqual(de.ahzf.Vanaheimr.Blueprints.SemanticProperty,de.ahzf.Vanaheimr.Blueprints.SemanticProperty)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="mySemanticPropertyKey1">A SemanticPropertyKey.</param>
            <param name="mySemanticPropertyKey2">Another SemanticPropertyKey.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.CompareTo(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="myObject">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.CompareTo(de.ahzf.Vanaheimr.Blueprints.SemanticProperty)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="mySemanticPropertyKey">An object to compare with.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.Equals(System.Object)">
            <summary>
            Compares two instances of this object.
            </summary>
            <param name="Object">An object to compare with.</param>
            <returns>true|false</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.Equals(de.ahzf.Vanaheimr.Blueprints.SemanticProperty)">
            <summary>
            Compares two SemanticPropertys for equality.
            </summary>
            <param name="SemanticProperty">A SemanticProperty to compare with.</param>
            <returns>True if both match; False otherwise.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.GetHashCode">
            <summary>
            Return the HashCode of this object.
            </summary>
            <returns>The HashCode of this object.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.ToString">
            <summary>
            A string representation of this object.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.Prefix">
            <summary>
            The RDF prefix, e.g. "http://xmlns.com/foaf/0.1"
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.Suffix">
            <summary>
            The RDF suffix, e.g. "knows"
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.Key">
            <summary>
            The key for the given RDF statement within your domain.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.SemanticProperty.Description">
            <summary>
            An optional description for this RDF mapping.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeIdCreatorDelegate`20">
            <summary>
            A delegate for creating a new unique edge identification
            (if no one was provided by the application/user).
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <returns>A unique edge identification.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeCreatorDelegate`20">
            <summary>
            A delegate for creating a new edge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="SourceVertex">The source vertex.</param>
            <param name="TargetVertex">The target vertex.</param>
            <param name="EdgeId">The Id of this edge.</param>
            <param name="EdgeLabel">The label of this edge.</param>
            <param name="EdgeInitializer">A delegate to initialize this edge with custom data.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeInitializer`20">
            <summary>
            A delegate for edge initializing.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Edge">A generic property edge.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgeCollectionInitializer`20">
            <summary>
            A delegate for creating a new edge collection.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdge`20">
            <summary>
            An edge links two vertices. Along with its key/value properties,
            an edge has both a directionality and a label.
            The directionality determines which vertex is the tail vertex
            (out vertex) and which vertex is the head vertex (in vertex).
            The edge label determines the type of relationship that exists
            between the two vertices.
            Diagrammatically, outVertex ---label---> inVertex.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexIdCreatorDelegate`20">
            <summary>
            A delegate for creating a new unique vertex identification.
            (if no one was provided by the application/user).
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <returns>A unique vertex identification.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexCreatorDelegate`20">
            <summary>
            A delegate for creating a new vertex.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="VertexId">The Id of the vertex.</param>
            <param name="VertexInitializer">A delegate to initialize this edge with custom data.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexInitializer`20">
            <summary>
            A delegate for vertex initializing.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Vertex">A generic property vertex.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.VertexCollectionInitializer`20">
            <summary>
            A delegate for creating a new vertex collection.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20">
            <summary>
            A vertex maintains pointers to both a set of incoming and outgoing edges.
            The outgoing edges are those edges for which the vertex is the tail.
            The incoming edges are those edges for which the vertex is the head.
            Diagrammatically, ---inEdges---> vertex ---outEdges--->.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.AddOutEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add an outgoing edge.
            </summary>
            <param name="Edge">The edge to add.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.RemoveOutEdges(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Remove outgoing edges.
            </summary>
            <param name="Edges">An array of outgoing edges to be removed.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.RemoveOutEdges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Remove any outgoing edge matching the
            given edge filter delegate.
            </summary>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.AddInEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add an incoming edge.
            </summary>
            <param name="Edge">The edge to add.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.RemoveInEdges(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Remove incoming edges.
            </summary>
            <param name="Edges">An array of incoming edges to be removed.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.RemoveInEdges(de.ahzf.Vanaheimr.Blueprints.EdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Remove any incoming edge matching the
            given edge filter delegate.
            </summary>
            <param name="EdgeFilter">A delegate for edge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.AddMultiEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyMultiEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add a multiedge.
            </summary>
            <param name="MultiEdge">The multiedge to add.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.RemoveMultiEdges(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyMultiEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Remove multiedges.
            </summary>
            <param name="MultiEdges">An array of outgoing edges to be removed.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.RemoveMultiEdges(de.ahzf.Vanaheimr.Blueprints.MultiEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Remove any outgoing multiedge matching
            the given multiedge filter delegate.
            </summary>
            <param name="MultiEdgeFilter">A delegate for multiedge filtering.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.AddHyperEdge(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGenericPropertyHyperEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Add a hyperedge.
            </summary>
            <param name="HyperEdge">The hyperedge to add.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.RemoveHyperEdges(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyHyperEdge{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}[])">
            <summary>
            Remove hyperedges.
            </summary>
            <param name="HyperEdges">An array of outgoing edges to be removed.</param>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.RemoveHyperEdges(de.ahzf.Vanaheimr.Blueprints.HyperEdgeFilter{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19})">
            <summary>
            Remove any outgoing hyperedge matching
            the given hyperedge filter delegate.
            </summary>
            <param name="HyperEdgeFilter">A delegate for hyperedge filtering.</param>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.OnOutEdgeAddition">
            <summary>
            Called whenever an outgoing edge will be or was added to the vertex.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.OnOutEdgeRemoval">
            <summary>
            Called whenever an outgoing edge will be or was removed from the vertex.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.OnInEdgeAddition">
            <summary>
            Called whenever an incoming edge will be or was added to the vertex.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.OnInEdgeRemoval">
            <summary>
            Called whenever an incoming edge will be or was removed from the vertex.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.OnMultiEdgeAddition">
            <summary>
            Called whenever a multiedge will be or was added to the vertex.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.OnMultiEdgeRemoval">
            <summary>
            Called whenever a multiedge will be or was removed from the vertex.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.OnHyperEdgeAddition">
            <summary>
            Called whenever a hyperedge will be or was added to the vertex.
            </summary>
        </member>
        <member name="P:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyVertex`20.OnHyperEdgeRemoval">
            <summary>
            Called whenever a hyperedge will be or was removed from the vertex.
            </summary>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.GraphFilter`20">
            <summary>
            A delegate for graph filtering.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">An IGenericPropertyGraph.</param>
            <returns>True if the event was accepted for further processing; False otherwise.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.GraphInitializer`20">
            <summary>
            A delegate for graph initializing.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="IGenericPropertyGraph">A gernric property graph.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.GraphShuttingdownEventHandler`20">
            <summary>
            An event handler called whenever a property graph will be shutted down.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="IPropertyGraph">The property graph sending this event.</param>
            <param name="Message">An optional message, e.g. a reason for the shutdown.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.GraphShutteddownEventHandler`20">
            <summary>
            An event handler called whenever a property graph was shutted down.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the multiedge property values.</typeparam>
            <param name="IPropertyGraph">The property graph sending this event.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.MultiEdgeFilter`20">
            <summary>
            A delegate for multiedge filtering.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="IGenericPropertyMultiEdge">An IGenericPropertyMultiEdge.</param>
            <returns></returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.CheckMultiEdgeExistance`20">
            <summary>
            A delegate to check the existance of a multiedge within the given graph.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Graph">A generic property graph.</param>
            <param name="MultiEdge">A generic property multiedge.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology">
            <summary>
            The graph-database ontology.
            </summary>
        </member>
        <member name="F:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.Prefix">
            <summary>
            The base Uri of the graph-database ontology.
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.Id">
            <summary>
            The Id of something.
            </summary>
            <returns>A semantic property key to be used within property graphs.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.RevId">
            <summary>
            The RevId of something.
            </summary>
            <returns>A semantic property key to be used within property graphs.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.Label">
            <summary>
            The Label of something.
            </summary>
            <returns>A semantic property key to be used within property graphs.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.Description">
            <summary>
            The description of something.
            </summary>
            <returns>A semantic property key to be used within property graphs.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.DefaultVertexLabel">
            <summary>
            The default vertex label.
            </summary>
            <returns>A semantic property key to be used within property graphs.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.DefaultEdgeLabel">
            <summary>
            The default edge label.
            </summary>
            <returns>A semantic property key to be used within property graphs.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.DefaultMultiEdgeLabel">
            <summary>
            The default multiedge label.
            </summary>
            <returns>A semantic property key to be used within property graphs.</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.GraphDBOntology.DefaultHyperEdgeLabel">
            <summary>
            The default hyperedge label.
            </summary>
            <returns>A semantic property key to be used within property graphs.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGraphElementExtensions">
            <summary>
            Extensions to the IReadOnlyGraphElement interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IReadOnlyGraphElementExtensions.AsDynamic``5(de.ahzf.Vanaheimr.Blueprints.IReadOnlyGraphElement{``0,``1,``2,``3,``4})">
            <summary>
            Converts the given IGraphElement into a dynamic object.
            </summary>
            <typeparam name="TId">The type of the identifiers.</typeparam>
            <typeparam name="TRevId">The type of the revision identifiers.</typeparam>
            <typeparam name="TKey">The type of the property keys.</typeparam>
            <typeparam name="TValue">The type of the property values.</typeparam>
            <param name="GraphElement">An object implementing IReadOnlyGraphElement&lt;...&gt;.</param>
            <returns>A dynamic graph element.</returns>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.EdgesException">
            <summary>
            An exception during edge processing occurred!
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.EdgesException.#ctor(System.String,System.Exception)">
            <summary>
            An exception during edge processing occurred!
            </summary>
            <param name="Message">The message that describes the error.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.DuplicateEdgeIdException`1">
            <summary>
            A duplicate EdgeId was detected.
            </summary>
            <typeparam name="TId">The type of the edge ids.</typeparam>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.DuplicateEdgeIdException`1.#ctor(`0,System.Exception)">
            <summary>
            A duplicate edge identification was detected.
            </summary>
            <param name="EdgeId">The unique id of the edge.</param>
            <param name="InnerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdgeExtensions">
            <summary>
            Extensions to the IGenericPropertyEdge interface
            </summary>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdgeExtensions.AsDynamic``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given edge into a dynamic object.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Edge">A generic property edge.</param>
            <returns>A dynamic object</returns>
        </member>
        <member name="M:de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdgeExtensions.AsReadOnly``20(de.ahzf.Vanaheimr.Blueprints.IGenericPropertyEdge{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19})">
            <summary>
            Converts the given generic property edge into a read only edge.
            </summary>
            <typeparam name="TIdVertex">The type of the vertex identifiers.</typeparam>
            <typeparam name="TRevIdVertex">The type of the vertex revision identifiers.</typeparam>
            <typeparam name="TVertexLabel">The type of the vertex type.</typeparam>
            <typeparam name="TKeyVertex">The type of the vertex property keys.</typeparam>
            <typeparam name="TValueVertex">The type of the vertex property values.</typeparam>
            
            <typeparam name="TIdEdge">The type of the edge identifiers.</typeparam>
            <typeparam name="TRevIdEdge">The type of the edge revision identifiers.</typeparam>
            <typeparam name="TEdgeLabel">The type of the edge label.</typeparam>
            <typeparam name="TKeyEdge">The type of the edge property keys.</typeparam>
            <typeparam name="TValueEdge">The type of the edge property values.</typeparam>
            
            <typeparam name="TIdMultiEdge">The type of the multiedge identifiers.</typeparam>
            <typeparam name="TRevIdMultiEdge">The type of the multiedge revision identifiers.</typeparam>
            <typeparam name="TMultiEdgeLabel">The type of the multiedge label.</typeparam>
            <typeparam name="TKeyMultiEdge">The type of the multiedge property keys.</typeparam>
            <typeparam name="TValueMultiEdge">The type of the multiedge property values.</typeparam>
            
            <typeparam name="TIdHyperEdge">The type of the hyperedge identifiers.</typeparam>
            <typeparam name="TRevIdHyperEdge">The type of the hyperedge revision identifiers.</typeparam>
            <typeparam name="THyperEdgeLabel">The type of the hyperedge label.</typeparam>
            <typeparam name="TKeyHyperEdge">The type of the hyperedge property keys.</typeparam>
            <typeparam name="TValueHyperEdge">The type of the hyperedge property values.</typeparam>
            <param name="Edge">A generic property edge.</param>
            <returns>A read-only edge.</returns>
        </member>
    </members>
</doc>
